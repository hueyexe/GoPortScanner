name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

env:
  GO_VERSION: '1.24'
  BINARY_NAME: goportscanner

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.out ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

      - name: Run golangci-lint
        run: golangci-lint run

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install gosec
        run: go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest

      - name: Run gosec
        run: gosec ./...

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: goportscanner-linux-amd64
          - os: windows-latest
            artifact_name: goportscanner-windows-amd64.exe
          - os: macos-latest
            artifact_name: goportscanner-darwin-amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install dependencies
        run: go mod download

      - name: Build
        run: |
          go build -ldflags "-X main.Version=${{ github.ref_name }} -X main.BuildTime=$(date -u '+%Y-%m-%d_%H:%M:%S') -X main.GitCommit=${{ github.sha }}" \
            -o ${{ matrix.artifact_name }} cmd/goportscanner/main.go

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_name }}

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: goportscanner:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [test, lint, security, build, docker]
    if: github.event_name == 'release'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create release archive
        run: |
          mkdir -p release
          cp goportscanner-linux-amd64 release/
          cp goportscanner-windows-amd64.exe release/
          cp goportscanner-darwin-amd64 release/
          cp README.md LICENSE CHANGELOG.md release/
          tar -czf goportscanner-${{ github.ref_name }}-linux-amd64.tar.gz -C release goportscanner-linux-amd64 README.md LICENSE CHANGELOG.md
          zip goportscanner-${{ github.ref_name }}-windows-amd64.zip release/goportscanner-windows-amd64.exe release/README.md release/LICENSE release/CHANGELOG.md
          tar -czf goportscanner-${{ github.ref_name }}-darwin-amd64.tar.gz -C release goportscanner-darwin-amd64 README.md LICENSE CHANGELOG.md

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./goportscanner-${{ github.ref_name }}-linux-amd64.tar.gz
          asset_name: goportscanner-${{ github.ref_name }}-linux-amd64.tar.gz
          asset_content_type: application/gzip

      - name: Upload Windows release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./goportscanner-${{ github.ref_name }}-windows-amd64.zip
          asset_name: goportscanner-${{ github.ref_name }}-windows-amd64.zip
          asset_content_type: application/zip

      - name: Upload macOS release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./goportscanner-${{ github.ref_name }}-darwin-amd64.tar.gz
          asset_name: goportscanner-${{ github.ref_name }}-darwin-amd64.tar.gz
          asset_content_type: application/gzip

  docker-release:
    name: Docker Release
    runs-on: ubuntu-latest
    needs: [release]
    if: github.event_name == 'release'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/goportscanner:latest
            ${{ secrets.DOCKER_USERNAME }}/goportscanner:${{ github.ref_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max